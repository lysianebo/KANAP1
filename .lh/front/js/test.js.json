{
    "sourceFile": "front/js/test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1677238976178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1677238976178,
            "name": "Commit-0",
            "content": "(async () => {\n    const meubleId = getMeubleId() // Chercher l'identifation avec get depuis l'URL\n    const meubleData = await getMeubleData(meubleId)\n    displayMeuble(meubleData)\n     \n    if (document.readyState == 'loading') { //Une fois que la page se télécharge le bouton va être pret aant les autres car si les boutons fonctionne après les autres, cela peut apporter des prpblèmes aux utilisateurs\n        document.addEventListener('DOMContentLoaded', ready)\n    } else {\n        ready(meubleData)\n    }\n})()\n \nfunction getMeubleId() {\n    // L'extraction de l'ID pour idenitifier quel lien on a cliquer et plus tard pour afficher le bon API (qui se trouve dans ID)\n \n    //let params = (new URL(document.location)).searchParams// new pour créer une autre instance qu'on peut retourner plus tard\n    //let id = params.get('id')\n \n    return (new URL(document.location)).searchParams.get('id')\n    //console.log(location)\n}\n \nfunction getMeubleData(meubleId) { // je crée une fetch pour chercher les données l'API et eventuellement l'API avec ID pour n'afficher qu'un seul donnée donc celui qui à le bon ID\n    return fetch(`http://localhost:3000/api/furniture/${meubleId}`) // j'imagine que la variable meubleId va injecter l'ID dans l'url donc chercher la bonne Id de l'API\n        .then((responseHttp) => responseHttp.json())\n        .catch((Error) => {\n            alert(Error) + document.getElementById(`Error :(`)\n        })\n}\n \nfunction displayMeuble(meubleData) { //j'imagine, Je vais afficher la bonne donnée que l'utilisateur à cliqué, directement modifier le DOM mais pas clonner comme da,ns la page index car il y en a qu'une seule donnée à afficher\n    document.getElementById('blog__image').src = meubleData.imageUrl\n    document.getElementById('blog__title').textContent = meubleData.name\n    document.getElementById('blog__description').textContent = meubleData.description\n    document.getElementById('blog__price').textContent = meubleData.price / 100 + \" €\"\n \n    for (let i = 0; i < meubleData.varnish.length; i++) {\n        const varnish = meubleData.varnish[i];\n        document.getElementById(\"selectOption\").innerHTML +=\n        `\n        <option value=\"`+ varnish +`\">`+ varnish +`</option>\n        `\n        // On peut faire ${meubleData.varnish[0]}\n    }\n}\n \nfunction ready(meubleData) {\n    // Evenement pour ajouter le produit au panier au moment de clique \"ajouter au pannier\"\n \n    const buttonAjout = document.getElementById('buttonAdd')\n    buttonAjout.addEventListener('click', (event) => {\n        event.preventDefault()\n        //let ajoutMeuble = await getAjoutMeuble(meubleData, event)\n        getAjoutMeuble(meubleData)\n        goToRedirectionToPanier(meubleData.name)\n        // Une fonction pour aller à la page shopping avec le ID et le nom\n         \n    })\n \n    //ici pour input value pour dire aux utilisateurs que l'utilisateur ne peut choisir au moins 1 produit et non negative ou autre choses que le nombre\n    let quantityInput = document.getElementById('quantity')\n    quantityInput.addEventListener(\"change\", quantityChanged)\n}\n \nfunction quantityChanged(event) { //Lier l'input value au bouton pour dire si on choisi l'input plus de un alors si on clique le bouton ajouter le panier, il va avoir 2 produits qui va se mettre au localStorage et le prix se mutiplie en rapport avec le nombre choisi sur l'input value\n    let input = event.target\n    let quantity = parseInt(input.value)\n    // si l'utilisateur choisi un nombre 0 ou moins ou pas un nombre alors le nombre va automatiquement revenir à 1, et si l'utilisateur choisi le nombre plus de 100 alors le chiffre va revenir à 100\n    if (isNaN(quantity) || quantity <= 0) {\n        quantity = 1\n    } else if (quantity > 100) {\n        quantity = 100\n    }\n    console.log(quantity)\n \n    input.value = quantity //Une fois la quantité validé, on l'as reinjecte dans l'input value\n \n    return quantity\n}\n \nfunction getAjoutMeuble(meubleData) {\n    /*L'utilisateur à besoin d'un panier dans le localStorage de son navigateur\nVérifier si le panier existe dans le localStorage, sinon le créer et l'envoyer dans le localStorage au premier chargement du site quelque soit la page*/\n    if (localStorage.getItem(\"userPanier\")) {\n        console.log(\"Administration : le panier de l'utilisateur existe dans le localStorage\");\n    } else {\n        console.log(\"Administration : Le panier n'existe pas, il va être créer et l'envoyer dans le localStorage\");\n        //Le panier est un tableau de produits\n        let panierInit = [];\n        localStorage.setItem(\"userPanier\", JSON.stringify(panierInit));\n    };\n \n    //L'user a maintenant un panier\n    let userPanier = JSON.parse(localStorage.getItem(\"userPanier\"));\n    //quantityChanged(event)\n \n    let quantityElement = document.getElementById('quantity').value // On récupère\n \n    for (let i = 0; i < quantityElement; i++) { //il va pusher la quantité qui se trouve dans le boucle for c'est à dire le quantité de 1 à 100\n        //const quantity = quantityElement[i];\n        let structureMeuble =\n        {\n            name:getMeubleData.name,\n            _id:meubleData._id,\n            quantity:quantityElement,\n            color:document.getElementById(\"selectOption\").value,\n            price:meubleData.price,\n            imageUrl:meubleData.imageUrl\n        }\n \n        //essaie\n        let meubleLinea = JSON.stringify(structureMeuble)\n        localStorage.setItem(\"structMeuble\", meubleLinea)\n        //essai finit       \n        userPanier.push(structureMeuble);\n    }\n \n    localStorage.setItem(\"userPanier\", JSON.stringify(userPanier))\n    console.log(\"Administration : le produit a été ajouté au panier\")\n    console.log(userPanier) /*L'user a maintenant un panier*/\n}\n \nfunction goToRedirectionToPanier(meubleDataNname){\n    window.location.href = `${window.location.origin}/panier.html?dernierProduitAjouter:=${meubleDataNname}`\n}\n"
        }
    ]
}